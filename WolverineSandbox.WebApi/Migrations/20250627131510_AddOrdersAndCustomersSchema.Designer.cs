// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WolverineSandbox.WebApi.Data;

#nullable disable

namespace WolverineSandbox.WebApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250627131510_AddOrdersAndCustomersSchema")]
    partial class AddOrdersAndCustomersSchema
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WolverineSandbox.WebApi.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("676ff728-5853-f011-9a57-4074e0d1f019"),
                            Email = "Osborne_Green24@yahoo.com"
                        },
                        new
                        {
                            Id = new Guid("686ff728-5853-f011-9a57-4074e0d1f019"),
                            Email = "Arno_Jerde32@hotmail.com"
                        },
                        new
                        {
                            Id = new Guid("696ff728-5853-f011-9a57-4074e0d1f019"),
                            Email = "Hayley62@gmail.com"
                        });
                });

            modelBuilder.Entity("WolverineSandbox.WebApi.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("OrderDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("TotalAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7bca9135-5853-f011-9a57-4074e0d1f019"),
                            CustomerId = new Guid("686ff728-5853-f011-9a57-4074e0d1f019"),
                            OrderDate = new DateTimeOffset(new DateTime(2025, 2, 1, 22, 47, 55, 912, DateTimeKind.Unspecified).AddTicks(8825), new TimeSpan(0, 0, 0, 0, 0)),
                            TotalAmount = 604.45m
                        },
                        new
                        {
                            Id = new Guid("7cca9135-5853-f011-9a57-4074e0d1f019"),
                            CustomerId = new Guid("696ff728-5853-f011-9a57-4074e0d1f019"),
                            OrderDate = new DateTimeOffset(new DateTime(2024, 9, 8, 6, 17, 59, 182, DateTimeKind.Unspecified).AddTicks(1994), new TimeSpan(0, 0, 0, 0, 0)),
                            TotalAmount = 524.09m
                        },
                        new
                        {
                            Id = new Guid("7dca9135-5853-f011-9a57-4074e0d1f019"),
                            CustomerId = new Guid("686ff728-5853-f011-9a57-4074e0d1f019"),
                            OrderDate = new DateTimeOffset(new DateTime(2024, 8, 4, 13, 35, 14, 491, DateTimeKind.Unspecified).AddTicks(5294), new TimeSpan(0, 0, 0, 0, 0)),
                            TotalAmount = 680.11m
                        },
                        new
                        {
                            Id = new Guid("7eca9135-5853-f011-9a57-4074e0d1f019"),
                            CustomerId = new Guid("676ff728-5853-f011-9a57-4074e0d1f019"),
                            OrderDate = new DateTimeOffset(new DateTime(2025, 4, 20, 8, 10, 41, 1, DateTimeKind.Unspecified).AddTicks(3700), new TimeSpan(0, 0, 0, 0, 0)),
                            TotalAmount = 515.47m
                        },
                        new
                        {
                            Id = new Guid("7fca9135-5853-f011-9a57-4074e0d1f019"),
                            CustomerId = new Guid("696ff728-5853-f011-9a57-4074e0d1f019"),
                            OrderDate = new DateTimeOffset(new DateTime(2024, 7, 21, 0, 45, 17, 707, DateTimeKind.Unspecified).AddTicks(1993), new TimeSpan(0, 0, 0, 0, 0)),
                            TotalAmount = 77.89m
                        },
                        new
                        {
                            Id = new Guid("ba1f2742-5853-f011-9a57-4074e0d1f019"),
                            CustomerId = new Guid("686ff728-5853-f011-9a57-4074e0d1f019"),
                            OrderDate = new DateTimeOffset(new DateTime(2025, 4, 6, 23, 49, 29, 334, DateTimeKind.Unspecified).AddTicks(901), new TimeSpan(0, 0, 0, 0, 0)),
                            TotalAmount = 553.36m
                        },
                        new
                        {
                            Id = new Guid("bb1f2742-5853-f011-9a57-4074e0d1f019"),
                            CustomerId = new Guid("696ff728-5853-f011-9a57-4074e0d1f019"),
                            OrderDate = new DateTimeOffset(new DateTime(2025, 2, 10, 5, 34, 22, 219, DateTimeKind.Unspecified).AddTicks(5269), new TimeSpan(0, 0, 0, 0, 0)),
                            TotalAmount = 375.37m
                        },
                        new
                        {
                            Id = new Guid("bc1f2742-5853-f011-9a57-4074e0d1f019"),
                            CustomerId = new Guid("676ff728-5853-f011-9a57-4074e0d1f019"),
                            OrderDate = new DateTimeOffset(new DateTime(2025, 1, 19, 17, 42, 10, 836, DateTimeKind.Unspecified).AddTicks(8003), new TimeSpan(0, 0, 0, 0, 0)),
                            TotalAmount = 93.10m
                        },
                        new
                        {
                            Id = new Guid("bd1f2742-5853-f011-9a57-4074e0d1f019"),
                            CustomerId = new Guid("696ff728-5853-f011-9a57-4074e0d1f019"),
                            OrderDate = new DateTimeOffset(new DateTime(2024, 10, 8, 7, 54, 47, 809, DateTimeKind.Unspecified).AddTicks(1147), new TimeSpan(0, 0, 0, 0, 0)),
                            TotalAmount = 857.02m
                        });
                });

            modelBuilder.Entity("WolverineSandbox.WebApi.Entities.Order", b =>
                {
                    b.HasOne("WolverineSandbox.WebApi.Entities.Customer", null)
                        .WithMany()
                        .HasForeignKey("CustomerId");
                });
#pragma warning restore 612, 618
        }
    }
}
